"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleError = void 0;
const node_1 = require("@sentry/node");
const chalk_1 = __importDefault(require("chalk"));
const os_1 = require("os");
const exit_1 = require("./helpers/exit");
const token_1 = require("./helpers/token");
const helpers_1 = require("./helpers");
const api_1 = require("./api");
const loader_1 = require("./helpers/loader");
const file_system_1 = require("./helpers/file-system");
const printMessage = (message) => {
    process.stderr.write(chalk_1.default.red(`Error: ${message}`) + os_1.EOL);
    process.stderr.write(`Hint: Use the ${chalk_1.default.green('--help')} option to get help about the usage` + os_1.EOL);
};
exports.default = async (message, error) => {
    (0, node_1.captureException)(error);
    if (message) {
        printMessage(message);
        return await (0, exit_1.exitProcess)();
    }
    let errorMessage = 'Unknown error occurred';
    errorMessage = error.message;
    printMessage(errorMessage);
    return await (0, exit_1.exitProcess)();
};
const handleError = async (e) => {
    if (e instanceof token_1.TokenError) {
        loader_1.loader.stop();
        helpers_1.log.yellow(`Storybook token not found. Please provide a token using the --token flag or the ANIMA_TEAM_TOKEN environment variable.`);
    }
    else if (e instanceof helpers_1.BuildDirError) {
        loader_1.loader.stop();
        helpers_1.log.yellow(`Cannot find build storybook: "${e.buildDir ?? helpers_1.DEFAULT_BUILD_DIR}". Please build storybook before running this command `);
        (0, node_1.captureException)(new Error('Cannot find build directory'));
    }
    else if (e instanceof api_1.AuthError) {
        helpers_1.log.red(`The Storybook token you provided "${e.token}" is invalid. Please check your token and try again.`);
        (0, node_1.captureException)(new Error("The Storybook token you provided 'HIDDEN' is invalid. Please check your token and try again."));
    }
    else if (e instanceof file_system_1.DesignTokenError) {
        const errorMessage = `Failed to read design tokens at path "${e.designTokenFilePath}"`;
        loader_1.loader.stop();
        helpers_1.log.yellow(errorMessage);
        (0, node_1.captureException)(new Error("Fail to read design tokens at path 'HIDDEN'"));
    }
    else {
        throw e;
    }
};
exports.handleError = handleError;
