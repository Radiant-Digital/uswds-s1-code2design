"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = exports.resolveAlias = exports.isTokenValueAlias = exports.isDesignToken = void 0;
// we are not using the one from token-core because we want to keep token-core as dev dep for now
const isDesignToken = (value) => {
    if (typeof value === 'object' && value !== null && '$value' in value) {
        return true;
    }
    return false;
};
exports.isDesignToken = isDesignToken;
const isTokenValueAlias = (value) => typeof value === 'string' && value.startsWith('{');
exports.isTokenValueAlias = isTokenValueAlias;
const resolveAlias = (designTokens, aliasValue) => {
    const newValue = (0, exports.get)(designTokens, aliasValue.slice(1, -1));
    if (!(0, exports.isDesignToken)(newValue)) {
        throw new Error(`Unexpected value in design tokens json file for alias value = ${aliasValue}, alias not found`);
    }
    return newValue;
};
exports.resolveAlias = resolveAlias;
const get = (obj, path) => {
    const travel = () => path
        .split('.')
        .reduce(
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    (res, key) => {
        if (res != null) {
            return res[key];
        }
        else {
            throw new Error("Key not found");
        }
    }, obj);
    try {
        const result = travel();
        return result;
    }
    catch (e) {
        console.error(e);
        return undefined;
    }
    ;
};
exports.get = get;
