"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAntdTheme = void 0;
const constants_1 = require("./constants");
const utils_1 = require("../utils");
const getAntdTheme = (dsToken) => {
    return convertDesignTokensToTheme(dsToken);
};
exports.getAntdTheme = getAntdTheme;
const convertDesignTokensToTheme = (designTokens) => {
    const tokens = convertDesignTokenColorsToTheme(designTokens);
    return { token: tokens };
};
const convertDesignTokenColorsToTheme = (designTokens) => {
    const antdTokens = {};
    const tokens = designTokens[constants_1.ANTD_TOKEN_KEY];
    if (!tokens) {
        console.warn(`Couldn't find any antd seed tokens (${constants_1.ANTD_TOKEN_KEY})`);
        return {};
    }
    if ("$value" in tokens) {
        throw new Error(`$value as a root key in the antd keys (${constants_1.ANTD_TOKEN_KEY})`);
    }
    for (const key in tokens) {
        const token = tokens[key];
        if (token == null)
            continue;
        if (typeof token !== 'object')
            throw new Error(`Unexpected value in design tokens json file for key = ${key} expecting object`);
        if ((0, utils_1.isDesignToken)(token)) {
            let newValue = token.$value;
            if ((0, utils_1.isTokenValueAlias)(newValue)) {
                newValue = (0, utils_1.resolveAlias)(designTokens, newValue).$value;
            }
            if (typeof newValue !== 'string' && typeof newValue !== 'number') {
                throw new Error(`Unexpected value in design tokens json file for key = ${key} expecting string got: ${JSON.stringify(newValue)}, new formats will come soon`);
            }
            antdTokens[key] = newValue;
        }
    }
    return antdTokens;
};
