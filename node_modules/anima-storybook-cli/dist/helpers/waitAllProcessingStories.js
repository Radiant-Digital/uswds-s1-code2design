"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.waitProcessingStories = void 0;
const api_1 = require("../api");
const INTERVAL_TIME = 5000;
const MINIMUM_INTERVAL_COUNT = 4;
const waitProcessingStories = async (teamToken, cb) => {
    let intervalLoopCount = 0;
    // At first the number of story will be 0, we need to wait a bit
    // before starting to check
    return new Promise((res, rej) => {
        const interval = setInterval(async () => {
            try {
                const response = await (0, api_1.getTeamProcessingStories)(teamToken);
                if (!response.ok) {
                    throw new Error('Impossible to retrieve the stories of the team');
                }
                const { results: stories } = (await response.json());
                cb.onCheckStories(stories);
                if (stories.length <= 0 && intervalLoopCount >= MINIMUM_INTERVAL_COUNT) {
                    clearInterval(interval);
                    return res();
                }
                intervalLoopCount += 1;
            }
            catch (e) {
                clearInterval(interval);
                return rej(e);
            }
        }, INTERVAL_TIME);
    });
};
exports.waitProcessingStories = waitProcessingStories;
